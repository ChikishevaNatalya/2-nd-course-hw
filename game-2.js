function startGame() {

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –∑–∞–¥–∞—á–∏
    const task = generateTask();
    const userAnswer = prompt(`–†–µ—à–∏—Ç–µ –ø—Ä–∏–º–µ—Ä: ${task.question}`);

    if (userAnswer === null) {
        alert("–ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.");
        return;
    }

    const normalizedUserAnswer = parseFloat(userAnswer.trim());

    if (isNaN(normalizedUserAnswer)) {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.");
        return;
    }

    if (normalizedUserAnswer === task.correctAnswer) {
        alert("–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üéâ");
    } else {
        alert(`–û—à–∏–±–∫–∞. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${task.correctAnswer}`);
    }
}

function generateTask() {
    const operators = ['+', '-', '*', '/'];
    const operator = operators[Math.floor(Math.random() * operators.length)];

    let a, b;

    switch (operator) {
        case '+':
            a = Math.floor(Math.random() * 50);
            b = Math.floor(Math.random() * 50);
            break;
        case '-':
            a = Math.floor(Math.random() * 100);
            b = Math.floor(Math.random() * a); // a >= b
            break;
        case '*':
            a = Math.floor(Math.random() * 10);
            b = Math.floor(Math.random() * 10);
            break;
        case '/':
            b = Math.floor(Math.random() * 10) + 1; // b ‚â† 0
            a = b * Math.floor(Math.random() * 10); // a % b === 0
            break;
    }

    const correctAnswer = eval(`${a} ${operator} ${b}`); // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    const question = `${a} ${operator} ${b}`;

    return { question, correctAnswer };
}